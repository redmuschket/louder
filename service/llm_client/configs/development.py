import os
from dotenv import load_dotenv
from pathlib import Path

load_dotenv()

JWT_SECRET_KEY = os.getenv("JWT_SECRET_KEY")
JWT_ALGORITHM = "HS256"

#KEY
STORAGE_KEY_DIR = Path(os.getenv('STORAGE_KEY_DIR'))
#deepseek
DEEPSEEK_AUTHORIZED_KEY_DIR = Path(STORAGE_KEY_DIR / os.getenv('DEEPSEEK_AUTHORIZED_KEY_DIR'))
DEEPSEEK_AUTHORIZED_KEY_PATH = (DEEPSEEK_AUTHORIZED_KEY_DIR / os.getenv('DEEPSEEK_AUTHORIZED_KEY_PATH'))
#yandex
YANDEX_ML_AUTHORIZED_KEY_DIR = STORAGE_KEY_DIR / os.getenv('YANDEX_ML_AUTHORIZED_KEY_DIR')
YANDEX_ML_AUTHORIZED_KEY_PATH = (YANDEX_ML_AUTHORIZED_KEY_DIR / os.getenv('YANDEX_ML_AUTHORIZED_KEY_PATH'))
YANDEX_ML_FOLDERS = os.getenv('YANDEX_ML_FOLDERS')
YANDEX_ML_SERVICE_ACCOUNT_ID = os.getenv('YANDEX_ML_SERVICE_ACCOUNT_ID')
YANDEX_ML_IAM_KEY_PATH = (YANDEX_ML_AUTHORIZED_KEY_DIR / os.getenv('YANDEX_ML_IAM_KEY_PATH'))
YANDEX_ML_JWT_KEY_PATH = (YANDEX_ML_AUTHORIZED_KEY_DIR / os.getenv('YANDEX_ML_JWT_KEY_PATH'))
#gigachat
GIGACHAT_OAUTH_URL = os.getenv('GIGACHAT_OAUTH_URL')
GIGACHAT_AUTHORIZED_KEY_DIR = Path(STORAGE_KEY_DIR / os.getenv('GIGACHAT_AUTHORIZED_KEY_DIR'))
GIGACHAT_AUTHORIZED_IAM_KEY_PATH = (GIGACHAT_AUTHORIZED_KEY_DIR / os.getenv('GIGACHAT_AUTHORIZED_IAM_KEY_PATH'))
GIGACHAT_AUTHORIZED_JWT_KEY_PATH = (GIGACHAT_AUTHORIZED_KEY_DIR / os.getenv('GIGACHAT_AUTHORIZED_JWT_KEY_PATH'))

#PATENT_PROMPT
STORAGE_PROMPTS_DIR = Path(os.getenv('PATENT_PROMPTS_STORAGE_DIR'))
PATENT_PROMPTS_PARSER_DEEPSEEK_PATH = STORAGE_PROMPTS_DIR / os.getenv('PATENT_PROMPTS_PARSER_DEEPSEEK_PATH')
PATENT_PROMPTS_PARSER_YANDEX_PATH = STORAGE_PROMPTS_DIR / os.getenv('PATENT_PROMPTS_PARSER_YANDEX_PATH')
PATENT_PROMPTS_ATTRIBUTE_MATCHER_DEEPSEEK_PATH = STORAGE_PROMPTS_DIR / os.getenv('PATENT_PROMPTS_ATTRIBUTE_MATCHER_DEEPSEEK_PATH')
PATENT_PROMPTS_ATTRIBUTE_MATCHER_YANDEX_PATH = STORAGE_PROMPTS_DIR / os.getenv('PATENT_PROMPTS_ATTRIBUTE_MATCHER_YANDEX_PATH')

#DEEPSEEK
#"deepseek/deepseek-chat-v3.1:free"
DEEPSEEK_MODEL = "deepseek/deepseek-r1:free"
DEEPSEEK_TEMPERATURE = 0
DEEPSEEK_REFERER = "https://deepseek.com"
DEEPSEEK_SITE_NAME = "AI-assistant-for-patents-telegram-app"
DEEPSEEK_API_URL = "https://openrouter.ai/api/v1/chat/completions"

#GIGACHAT
GIGACHAT_MODEL = "GigaChat-2"
GIGACHAT_TEMPERATURE = 0
GIGACHAT_REPETITION_PANALTY = 1.1
GIGACHAT_API_URL = "https://gigachat.devices.sberbank.ru/api/v1/chat/completions"
GIGACHAT_SCOPE="GIGACHAT_API_PERS"

#YANDEX
YANDEX_ML_REST_FOLDERS = os.getenv('YANDEX_ML_FOLDERS')
YANDEX_ML_GRPC_FOLDERS = os.getenv('YANDEX_ML_FOLDERS')
YANDEX_ML_MAX_TOKEN = 1000
YANDEX_ML_REST_MODEL = os.getenv('YANDEX_ML_MODEL')
YANDEX_ML_GRPC_MODEL = os.getenv('YANDEX_ML_MODEL')
YANDEX_ML_REST_API_URI = f"gpt://{YANDEX_ML_REST_FOLDERS}/{YANDEX_ML_REST_MODEL}"
YANDEX_ML_GRPC_API_URI = f"gpt://{YANDEX_ML_GRPC_FOLDERS}/{YANDEX_ML_GRPC_MODEL}"

#PROXY
#Proxifly
PROXIFLY_SOCKS5_PROXY_STORAGE_PATH = Path("./storage/proxy/data.json")

#LOGS
LOG_DIR = os.getenv('LOG_DIR')
LOG_FILE_SYSTEM = os.getenv('LOG_FILE_SYSTEM')
LOG_FILE_USER = os.getenv('LOG_FILE_USER')
LOG_MAX_BYTES = 10 * 1024 * 1024  # 10 MB
LOG_BACKUP_COUNT = 5
LOG_ENCODING = 'utf-8'
# Format
LOG_SYSTEM_FORMAT = '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
LOG_USER_FORMAT = '%(asctime)s - %(message)s'
# Logging levels
LOG_FILE_LEVEL = 'INFO'
LOG_CONSOLE_LEVEL = 'DEBUG'
LOG_ROOT_LEVEL = 'DEBUG'
LOG_WERKZEUG_LEVEL = 'INFO'

DEBUG = True
